// №3 Поиск минимальных, максимальных элементов в массиве случайный чисел
Процедура МинМакс()                  
	Числа = Новый Массив(100);                      //Создан массив на 100 элементов
	ГСЧ = Новый ГенераторСлучайныхЧисел;            //Создан генератор случайных чисел
	МинимальноеЧисло = 1000;
	МаксимальноеЧисло = 0;
	СуммаЧисел = 0;
	
	Для Шаг = 0 По 99 Цикл
		Числа[Шаг] = ГСЧ.СлучайноеЧисло(0, 1000);	//Заполнили массив случайными числами от 0 до 1000
		Если МинимальноеЧисло > Числа[Шаг] Тогда    //Отбираем минимальное число
			МинимальноеЧисло = Числа[Шаг];
		КонецЕсли;
		Если МаксимальноеЧисло < Числа[Шаг] Тогда   //Отбираем максимальное число
			МаксимальноеЧисло = Числа[Шаг];
		КонецЕсли;
		
		СуммаЧисел = СуммаЧисел + Числа[Шаг];
		
	КонецЦикла;
	
	СреднееАрифметическое = СуммаЧисел / Числа.Количество();
	Сообщить("Минимальное число: " + МинимальноеЧисло);
	Сообщить("Максимальное число: " + МаксимальноеЧисло);
	Сообщить("Среднее арифметическое: " + СреднееАрифметическое);  
КонецПроцедуры 

// №4 Сортировка массива методом пузырька
Процедура Пузырек()
	Числа = Новый Массив(100);                      //Создан массив на 100 элементов
	ГСЧ = Новый ГенераторСлучайныхЧисел;            //Создан генератор случайных чисел 
	
	Для Шаг = 0 По 99 Цикл 
		Числа[Шаг] = ГСЧ.СлучайноеЧисло(0, 1000);	//Заполнили массив случайными числами от 0 до 1000
	КонецЦикла;
	Для ВнешШаг = 1 По Числа.Количество() - 2 Цикл 
		Обмен = Ложь;
		Для ВнутрШаг = 1 По Числа.Количество() - 1 Цикл 
			Если Числа[ВнутрШаг - 1] > Числа[ВнутрШаг] Тогда
				Переменная = Числа[ВнутрШаг - 1];
				Числа[ВнутрШаг - 1] = Числа[ВнутрШаг];
				Числа[ВнутрШаг] = Переменная;
				Обмен = Истина;
			КонецЕсли;
		КонецЦикла;  
		Если Не Обмен Тогда   //Если не было обмена сортировка завершена
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	
	Для Каждого Элемент Из Числа Цикл    
		Сообщить(Элемент);
	КонецЦикла;
КонецПроцедуры

//№5 Вычисление факториала
Процедура Факториал()
ГСЧ = Новый ГенераторСлучайныхЧисел;            //Создан генератор случайных чисел 
Число = ГСЧ.СлучайноеЧисло(1, 15);              //Сгенерировано случайное число
Факториал = 1;
Для Шаг = 1 По Число Цикл
	Факториал = Факториал * Шаг;
КонецЦикла;
Сообщить("Факториал " + Число + " равен: " + Факториал);
КонецПроцедуры 



//№6 Простые числа 
Функция ПростыеЧисла(Число)
	//Число = 0;
	//ВвестиЧисло(Число, "Введите натуральное число");
	Число = Цел(Число);
	
	ПростоеЧисло = Истина;
	//Если Число > 2 Тогда
		Для Шаг = 2 По Число - 1 Цикл
			Если Число%Шаг = 0 Тогда 
				ПростоеЧисло = Ложь;
				//ОткрытьЗначение("Число " + Число + " не является простым");
				Прервать;
			КонецЕсли;
		КонецЦикла;
	//КонецЕсли;
	//Если ПростоеЧисло Тогда
	//	ОткрытьЗначение("Число " + Число + " является простым");
	//КонецЕсли;
	Возврат ПростоеЧисло;
	
КонецФункции  

//№7 Вывод простых чисел от 1 дл 1000 
Процедура ВыводПростыхЧисел()
Для Шаг = 1 По 1000 Цикл
	Если ПростыеЧисла(Шаг) Тогда
		Сообщить(Шаг);
	КонецЕсли;
КонецЦикла;
КонецПроцедуры

//№7б Палиндром
Процедура Палиндром()
Стр ="";
ВвестиСтроку(Стр, "Введите слово"); 
ДлинаСлова = СтрДлина(Стр);
Стр = НРег(Стр);
ЯвляетсяПалиндромом = Истина;

Для Шаг = 1 По Цел(ДлинаСлова / 2) Цикл  
	Если Не КодСимвола(Стр, Шаг) = КодСимвола(Стр,ДлинаСлова - (Шаг - 1)) Тогда
		ОткрытьЗначение("Слово " + Стр + " не является палиндромом"); 
		ЯвляетсяПалиндромом = Ложь;
		Прервать;
	КонецЕсли;
КонецЦикла;

Если ЯвляетсяПалиндромом Тогда
	ОткрытьЗначение("Слово " + Стр + " является палиндромом");
КонецЕсли;
КонецПроцедуры

//№8 Подсчет колисества слов, пробелов и знаков препинания
Процедура ПодсчетСлов()
	Строка = "";
	ВвестиСтроку(Строка, "Введите строку");
	СчетчикСлов = 0;
	СчетчикПробелов = 0;
	СчетчикЗнаков = 0; 
	СпецСимволы = "!`~"";:?*()/|\'[]{}<>-_@#$%^&+.,";
	Для Шаг = 1 По СтрДлина(Строка) Цикл
		Символ = Сред(Строка, Шаг, 1); //получаем текущий символ 
		Если Символ = " " Тогда
			СчетчикПробелов = СчетчикПробелов + 1;
		ИначеЕсли 
			СтрНайти(СпецСимволы, Символ) > 0 Тогда
			СчетчикЗнаков = СчетчикЗнаков + 1;
		Иначе
			Если Шаг = 1 Тогда
				СчетчикСлов = СчетчикСлов + 1;
			ИначеЕсли Сред(Строка, Шаг - 1, 1) = " " Или СтрНайти(СпецСимволы, Сред(Строка, Шаг - 1, 1)) > 0 Тогда
				СчетчикСлов = СчетчикСлов + 1; //если предыдущий символ не буква, то началось слово
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ОткрытьЗначение("Количество слов: " + СчетчикСлов + ", количество пробелов: " + СчетчикПробелов + ", количество знаков препинания: " + СчетчикЗнаков);
КонецПроцедуры

//№9 Сортировка строки по длине слов
Процедура СортировкаСлов()
Строка = "";
ВвестиСтроку(Строка, "Введите строку");
ЗнакиПрепинания = "! `~"";:?*()/|\'[]{}<>-_@#$%^&+.,"; // знаки препинания, в том числе пробел
МыВСлове = Ложь;
Слова = Новый Массив; 
ТекущееСлово = "";

Для Шаг = 1 По СтрДлина(Строка) Цикл
	Символ = Сред(Строка, Шаг, 1);
	Если  СтрНайти(ЗнакиПрепинания, Символ) > 0 Тогда  // если встретили пробел или знак препинания
		Если МыВСлове Тогда //если мы внутри слова - оно закончилось
			Слова.Добавить(ТекущееСлово); //добавляем его в массив
			ТекущееСлово = "";            //и обнуляем
		КонецЕсли; 
		МыВСлове = Ложь;     
		
	Иначе  // иначе буква, т.е. мы в слове 
		МыВСлове = Истина;
		ТекущееСлово = ТекущееСлово + Символ;	
	КонецЕсли;
КонецЦикла;

	
Если МыВСлове Тогда //если после последнего слова не было знаков препинания
	Слова.Добавить(ТекущееСлово);
КонецЕсли; 

Для ВнешШаг = 1 По Слова.Количество() - 2 Цикл 
	Обмен = Ложь;
	Для ВнутрШаг = 1 По Слова.Количество() - 1 Цикл 
		Если СтрДлина(Слова[ВнутрШаг - 1]) > СтрДлина(Слова[ВнутрШаг]) Тогда
			Переменная = Слова[ВнутрШаг - 1];
			Слова[ВнутрШаг - 1] = Слова[ВнутрШаг];
			Слова[ВнутрШаг] = Переменная;
			Обмен = Истина;
		КонецЕсли;
	КонецЦикла;  
	Если Не Обмен Тогда   //Если не было обмена сортировка завершена
		Прервать;
	КонецЕсли;	
КонецЦикла;

Для Каждого Элемент Из Слова Цикл
	ОткрытьЗначение(Элемент); 
	КонецЦикла;
Конецпроцедуры

		
			
			
		
			
	




	
		
		
		
	
		
		
		
	








		

	





